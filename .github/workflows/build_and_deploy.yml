name: Deploy to Google Cloud

on:
  push:

jobs:
  deploy:
    runs-on: 'ubuntu-latest'
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: 'actions/checkout@v3'

      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - id: 'deploy'
        name: 'Deploy Function'
        env: 
          PLAYWRIGHT_BROWSERS_PATH: 0
        run: >
          yarn && npx playwright install && 
          gcloud functions deploy immo-scrape 
            --source . 
            --gen2 
            --runtime nodejs18 
            --trigger-http 
            --region=europe-west3 
            --entry-point=scrape 
            --set-env-vars=DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }},DISCORD_CHANNEL_ID=${{ secrets.DISCORD_CHANNEL_ID }},PLAYWRIGHT_BROWSERS_PATH=0

      - name: 'Deploy Scheduler'
        run: >
          if gcloud scheduler jobs describe trigger-immo-scraper --location=europe-west3 ; then
            echo "Job exists, updating..."
            gcloud scheduler jobs update http trigger-immo-scraper
            --schedule="0 * * * *"
            --location=europe-west3
            --http-method=GET
            --uri=${{steps.deploy.outputs.url}}
            --oidc-service-account-email=cloud-scheduler-sa@immo-scraper-387414.iam.gserviceaccount.com
          else
            echo "Job doesn't exist, creating..."
            gcloud scheduler jobs create http trigger-immo-scraper
            --schedule="0 * * * *"
            --location=europe-west3
            --http-method=GET
            --uri=${{steps.deploy.outputs.url}}
            --oidc-service-account-email=cloud-scheduler-sa@immo-scraper-387414.iam.gserviceaccount.com
          fi
